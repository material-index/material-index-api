openapi: 3.0.3
info:
  title: Material Index API
  description: |
    A comprehensive API for accessing material property data, categories, and search functionality.
    This API provides access to a vast database of material properties, enabling developers to
    build applications that require material data for engineering, design, and research purposes.
  version: 1.0.0
  contact:
    name: Material Index Team
    email: info@material-index.com
    url: https://material-index.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: https://api.material-index.com/v1
    description: Production server
  - url: https://staging-api.material-index.com/v1
    description: Staging server
  - url: http://localhost:3001/api/v1
    description: Development server

security:
  - ApiKeyAuth: []
  - SupabaseAuth: []

paths:
  /health:
    get:
      summary: Health Check
      description: Check the health status of the API
      tags:
        - System
      security: []
      responses:
        '200':
          description: API is healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: ok
                  timestamp:
                    type: string
                    format: date-time
                  version:
                    type: string
                    example: 1.0.0

  /materials:
    get:
      summary: List Materials
      description: Retrieve a paginated list of materials with optional filtering
      tags:
        - Materials
      parameters:
        - name: page
          in: query
          description: Page number for pagination
          required: false
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: limit
          in: query
          description: Number of materials per page
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
        - name: category
          in: query
          description: Filter by category ID
          required: false
          schema:
            type: string
        - name: search
          in: query
          description: Search term for name and description
          required: false
          schema:
            type: string
      responses:
        '200':
          description: List of materials
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Material'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
                  meta:
                    $ref: '#/components/schemas/Meta'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalError'

    get:
      summary: Search Materials
      description: Search materials by query string
      tags:
        - Materials
      parameters:
        - name: q
          in: query
          description: Search query
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: Page number for pagination
          required: false
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: limit
          in: query
          description: Number of results per page
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
        - name: category
          in: query
          description: Filter by category ID
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Search results
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Material'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
                  meta:
                    allOf:
                      - $ref: '#/components/schemas/Meta'
                      - type: object
                        properties:
                          query:
                            type: string
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalError'

  /materials/{id}:
    get:
      summary: Get Material by ID
      description: Retrieve a specific material by its ID
      tags:
        - Materials
      parameters:
        - name: id
          in: path
          description: Material ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Material details
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Material'
                  meta:
                    $ref: '#/components/schemas/Meta'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalError'

  /categories:
    get:
      summary: List Categories
      description: Retrieve all material categories
      tags:
        - Categories
      responses:
        '200':
          description: List of categories
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Category'
                  meta:
                    $ref: '#/components/schemas/Meta'
        '500':
          $ref: '#/components/responses/InternalError'

  /categories/{id}:
    get:
      summary: Get Category by ID
      description: Retrieve a specific category by its ID
      tags:
        - Categories
      parameters:
        - name: id
          in: path
          description: Category ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Category details
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Category'
                  meta:
                    $ref: '#/components/schemas/Meta'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalError'

  /categories/{id}/materials:
    get:
      summary: Get Materials by Category
      description: Retrieve materials belonging to a specific category
      tags:
        - Categories
      parameters:
        - name: id
          in: path
          description: Category ID
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: Page number for pagination
          required: false
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: limit
          in: query
          description: Number of materials per page
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
      responses:
        '200':
          description: Materials in category
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Material'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
                  meta:
                    allOf:
                      - $ref: '#/components/schemas/Meta'
                      - type: object
                        properties:
                          category_id:
                            type: string
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalError'

  /properties:
    get:
      summary: List Properties
      description: Retrieve all available material properties
      tags:
        - Properties
      responses:
        '200':
          description: List of properties
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Property'
                  meta:
                    $ref: '#/components/schemas/Meta'
        '500':
          $ref: '#/components/responses/InternalError'

  /properties/{id}:
    get:
      summary: Get Property by ID
      description: Retrieve a specific property by its ID
      tags:
        - Properties
      parameters:
        - name: id
          in: path
          description: Property ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Property details
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Property'
                  meta:
                    $ref: '#/components/schemas/Meta'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalError'

  /properties/categories:
    get:
      summary: List Property Categories
      description: Retrieve all property categories
      tags:
        - Properties
      responses:
        '200':
          description: List of property categories
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/PropertyCategory'
                  meta:
                    $ref: '#/components/schemas/Meta'
        '500':
          $ref: '#/components/responses/InternalError'

  /properties/search:
    get:
      summary: Search Properties
      description: Search properties by query string
      tags:
        - Properties
      parameters:
        - name: q
          in: query
          description: Search query
          required: true
          schema:
            type: string
        - name: category
          in: query
          description: Filter by property category
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Search results
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Property'
                  meta:
                    allOf:
                      - $ref: '#/components/schemas/Meta'
                      - type: object
                        properties:
                          query:
                            type: string
                          category:
                            type: string
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalError'

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: Authorization
      description: API Key authentication using Bearer token format
    SupabaseAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: Supabase JWT token authentication

  schemas:
    Material:
      type: object
      required:
        - id
        - name
        - material_category_id
        - created_at
      properties:
        id:
          type: integer
          description: Unique material identifier
          example: 3160
        name:
          type: string
          description: Material name
          example: "Copper wire - plate - tube - trade mix ( 68% prim 32% sec)"
        description:
          type: string
          description: Material description
          example: "Copper wire with mixed primary and secondary content"
        material_category_id:
          type: integer
          description: Category ID this material belongs to
          example: 312
        alternative_names:
          type: string
          description: Alternative names for the material
          example: "Copper wire - plate - tube - trade mix ( 68% prim 32% sec)"
        scientific_name:
          type: string
          nullable: true
          description: Scientific name of the material
          example: null
        distribution:
          type: string
          description: Geographic distribution information
          example: "Global"
        variation_name:
          type: string
          nullable: true
          description: Variation name if applicable
          example: null
        custom_id:
          type: string
          format: uuid
          description: Custom UUID identifier
          example: "c99575f4-6675-4ed1-815b-e6b10abe37fc"
        version:
          type: integer
          description: Version number
          example: 1
        is_verified:
          type: boolean
          description: Whether the material data is verified
          example: false
        source:
          type: string
          description: Data source
          example: "Idemat 2025"
        ingredients:
          type: string
          nullable: true
          description: Material ingredients
          example: null
        created_at:
          type: string
          format: date-time
          description: Creation timestamp
          example: "2025-07-29T14:49:56.119963"
        updated_at:
          type: string
          format: date-time
          description: Last update timestamp
          example: "2025-07-29T14:49:56.119969"
        created_by:
          type: string
          nullable: true
          description: Creator identifier
          example: null
        slug:
          type: string
          description: URL-friendly identifier
          example: "copper-wire-plate-tube-trade-mix-68-prim-32-sec"
        group_image_url:
          type: string
          nullable: true
          description: Group image URL
          example: null

    Category:
      type: object
      required:
        - id
        - name
        - created_at
      properties:
        id:
          type: integer
          description: Unique category identifier
          example: 312
        name:
          type: string
          description: Category name
          example: "Metals"
        description:
          type: string
          description: Category description
          example: "Metallic materials and alloys"
        parent_id:
          type: integer
          nullable: true
          description: Parent category ID for hierarchical structure
          example: null
        created_at:
          type: string
          format: date-time
          description: Creation timestamp
        updated_at:
          type: string
          format: date-time
          description: Last update timestamp

    Property:
      type: object
      required:
        - id
        - name
        - created_at
      properties:
        id:
          type: integer
          description: Unique property identifier
          example: 1
        name:
          type: string
          description: Property name
          example: "Density"
        description:
          type: string
          description: Property description
          example: "Mass per unit volume"
        unit:
          type: string
          description: Property unit of measurement
          example: "kg/m³"
        data_type:
          type: string
          description: Data type of the property value
          example: "float"
        category_id:
          type: integer
          description: Property category ID
          example: 1
        created_at:
          type: string
          format: date-time
          description: Creation timestamp
        updated_at:
          type: string
          format: date-time
          description: Last update timestamp

    PropertyCategory:
      type: object
      required:
        - id
        - name
        - created_at
      properties:
        id:
          type: integer
          description: Unique property category identifier
          example: 1
        name:
          type: string
          description: Property category name
          example: "Physical Properties"
        description:
          type: string
          description: Property category description
          example: "Basic physical properties of materials"
        created_at:
          type: string
          format: date-time
          description: Creation timestamp
        updated_at:
          type: string
          format: date-time
          description: Last update timestamp

    Pagination:
      type: object
      required:
        - page
        - limit
        - total
        - total_pages
        - has_next
        - has_prev
      properties:
        page:
          type: integer
          description: Current page number
          example: 1
        limit:
          type: integer
          description: Number of items per page
          example: 20
        total:
          type: integer
          description: Total number of items
          example: 693
        total_pages:
          type: integer
          description: Total number of pages
          example: 35
        has_next:
          type: boolean
          description: Whether there is a next page
          example: true
        has_prev:
          type: boolean
          description: Whether there is a previous page
          example: false

    Meta:
      type: object
      required:
        - timestamp
        - version
      properties:
        timestamp:
          type: string
          format: date-time
          description: Response timestamp
          example: "2025-09-26T11:32:25.441Z"
        version:
          type: string
          description: API version
          example: "1.0.0"

    Error:
      type: object
      required:
        - error
        - message
      properties:
        error:
          type: string
          description: Error type
          example: "Bad Request"
        message:
          type: string
          description: Error message
          example: "Invalid request parameters"

  responses:
    BadRequest:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            error: "Bad Request"
            message: "Invalid request parameters"

    NotFound:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            error: "Not Found"
            message: "Resource not found"

    InternalError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            error: "Internal Server Error"
            message: "An unexpected error occurred"

tags:
  - name: System
    description: System health and status endpoints
  - name: Materials
    description: Material data and search operations
  - name: Categories
    description: Material category management
  - name: Properties
    description: Material property data and search
